
(library
  (name graphTypes)
  (modules graphTypes)
  (modules_without_implementation graphTypes)
  (ocamlc_flags -g)
)

(library
  (name generateSeq)
  (modules generateSeq)
  (libraries graphTypes fileHandler)
  (ocamlc_flags -g)
)

(library
  (name fileHandler)
  (modules fileHandler)
  (ocamlc_flags -g)
)

(executable
  (name gen)
  (modules gen)
  (libraries unix generateSeq fileHandler)
  (ocamlc_flags -g)
)

(library
  (name sparseGraphSeq)
  (modules sparseGraphSeq)
  (libraries graphTypes)
  (preprocess (pps ppx_inline_test ppx_assert))
  (inline_tests)
  (ocamlc_flags -g)
)

(library
  (name kernel1Seq)
  (modules kernel1Seq)
  (libraries generateSeq sparseGraphSeq unix)
  (ocamlc_flags -g)
)

(library
  (name kernel2Seq)
  (modules kernel2Seq)
  (libraries generateSeq sparseGraphSeq unix)
  (preprocess (pps ppx_inline_test ppx_assert))
  (inline_tests)
  (ocamlc_flags -g)
)

(library
  (name kernel3Seq)
  (modules kernel3Seq)
  (libraries graphTypes generateSeq sparseGraphSeq unix)
  (preprocess (pps ppx_inline_test ppx_assert))
  (inline_tests)
  (ocamlc_flags -g)
)

(executable
  (name sampleSearchKeys)
  (modules sampleSearchKeys)
  (libraries graphTypes generateSeq sparseGraphSeq unix)
  (ocamlc_flags -g)
)

(executable
  (name print_sparse)
  (modules print_sparse)
  (modes byte exe)
  (libraries sparseGraphSeq graphTypes fileHandler kernel1Seq unix)
  (ocamlc_flags -g)
)

(executable
  (name kernel1Seq_run)
  (modules kernel1Seq_run)
  (libraries sparseGraphSeq graphTypes fileHandler kernel1Seq unix)
  (ocamlc_flags -g)
)

(executable
  (name kernel2Seq_run)
  (modules kernel2Seq_run)
  (modes byte exe)
  (libraries sparseGraphSeq graphTypes fileHandler kernel2Seq unix)
  (ocamlc_flags -g)
)

;(alias
;  (name buildbench)
;  (deps kronecker.exe kernel2.exe kernel3.exe
;        gen.exe kernel1Seq_run.exe)
;)
